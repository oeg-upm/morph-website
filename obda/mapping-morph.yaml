prefixes:
    ov: http://open.vocab.org/terms/
    dct: http://purl.org/dc/terms/
    co: http://purl.org/co/
    idlab-fn: http://example.com/idlab/function/
    grel: http://users.ugent.be/~bjdmeest/function/grel.ttl#
    ex: http://example.com/
    doi: http://doi.org/
    oeg: http://www.oeg-upm.net/resource/

mappings:
  person:
    sources:
      - [files/person.csv~csv]
    s: oeg:person/$(id)
    po:
    - [a, schema:Person]
    - [dct:identifier, $(id)]
    - [schema:jobTitle, $(position), xsd:integer] 
    - [schema:jobTitle, $(role)]
    - [schema:name, $(name)]
    - [schema:url, $(webpage)~iri]
    - [schema:memberOf, $(group)~iri]
    - [schema:memberOf, $(organization)~iri]    
    - [schema:affiliation, $(organization)~iri]
    - [schema:worksFor, $(organization)~iri]    
    - [schema:image, $(photo)~iri]
    - [schema:description, $(biography)]
    - [schema:email, $(email)]
    - [schema:identifier, http://twitter.com/$(twitter)~iri]
    - [schema:identifier, $(linkedin)~iri]    
    - [schema:identifier, http://github.com/$(github)~iri]   
    - [schema:startDate, $(start_date), xsd:date] # I am not sure that we need this property. It is not applicable to Person, anyway
    - [schema:nationality, $(nationality)]  #TODO: Add this in the CSV
    - [ex:status, $(status)] #Is this property needed?


  paper:
    sources:
      - [files/paper.csv~csv]
    s: oeg:paper/$(id)
    po:
    - [a, schema:ScholarlyArticle]
    - [dct:identifier, $(id)]
    - [schema:name, $(title)]
    - [schema:abstract, $(description)]
    - [schema:url, $(paper_link)~iri]
    - [schema:datePublished, $(date_published), xsd:date]
    - [schema:Event, $(event)~iri] # This not right, although in schema.org there is no way to relate an article and the event where it comes from
    - [ex:eventName, $(event_name)] # Indeed, I suggest removing all references to events and create a single property, or then creating an entity of type Event, etc.
    - p: schema:author
      o:
        - mapping: papers_people
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(paper_id)]
    - p: schema:award
      o:
        - mapping: papers_awards
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(paper_id)]
    - p: schema:workExample
      o:
        - mapping: papers_tools
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(paper_id)]              
  tool:
    sources:
      - [files/tool.csv~csv]
    s: oeg:Tool/$(id)
    po:
    - [a, schema:SoftwareSourceCode]
    - [dct:identifier, $(id)]
    - [schema:name, $(name)]
    - [schema:codeRepository, $(ghrepo)~iri]
    - [doi:name, $(zenodo)]  #TODO: This should be a sameAs to the URL of the DOI, instead of this. Remove
    - [schema:about, $(description)]
    - [schema:abstract, $(abstract)]
    - [schema:image, $(image_link)~iri]
    - [schema:datePublished, $(date_published), xsd:date]
    - [schema:url, $(webpage)~iri]
    - p: schema:author
      o:
        - mapping: people_tools
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(tool_id)]
    - p: schema:exampleOfWork
      o:
        - mapping: papers_tools
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(tool_id)]
    - p: schema:award
      o:
        - mapping: awards_tools
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(tool_id)]

  award:  #TODO: I would remove all structured references to Awards, since they do not exist in schema.org and are just a text, and this is how they are presented in the website. Create a text from this CSV.
    sources:
      - [files/award.csv~csv]
    s: oeg:Award/$(id)
    po:
    - [a, schema:award]
    - [dct:identifier, $(id)]
    - [schema:name, $(name)]
    - [schema:about,$(description)]
    - [schema:Date, $(date), xsd:date]
    - [schema:Event, $(event)~iri]
    - [ex:eventName, $(event_name)]    
    - [schema:url, $(award_link)~iri]
    - p: schema:winner
      o:
        - mapping: people_awards
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(award_id)]
    - p: schema:Article
      o:
        - mapping: papers_awards
          condition:
            function: equal
            parameters:
              - [str1, $(id)]
              - [str2, $(award_id)]
    - p: schema:SoftwareSourceCode
      o:
        - mapping: awards_tools
          condition:
            function: equal
            parameters:
                - [str1, $(id)]
                - [str2, $(award_id)]   
                                
  papers_people:
    sources:
      - [files/papers_people.csv~csv]
    s: oeg:Paper_person/$(paper_id)_$(person_id)
    po:
    - [a, schema:isRelatedTo]
    - [schema:position, $(position), xsd:integer]
    - p: schema:ScholarlyArticle
      o:
      - mapping: paper
        condition:
          function: equal
          parameters:
            - [str1, $(paper_id)]
            - [str2, $(id)]
    - p: schema:Person
      o:
      - mapping: person
        condition:
          function: equal
          parameters:
            - [str1, $(person_id)]
            - [str2, $(id)]

  papers_awards:
    sources:
      - [files/papers_awards.csv~csv]
    s: oeg:Paper_award/$(paper_id)_$(award_id)
    po:
    - [a, schema:isRelatedTo]
    - p: schema:ScholarlyArticle
      o:
      - mapping: paper
        condition:
          function: equal
          parameters:
            - [str1, $(paper_id)]
            - [str2, $(id)]
    - p: schema:award
      o:
      - mapping: award
        condition:
          function: equal
          parameters:
            - [str1, $(award_id)]
            - [str2, $(id)]

  papers_tools:
    sources:
      - [files/papers_tools.csv~csv]
    s: oeg:Paper_tool/$(paper_id)_$(tool_id)
    po:
    - [a, schema:isRelatedTo]
    - p: schema:ScholarlyArticle
      o:
      - mapping: paper
        condition:
          function: equal
          parameters:
            - [str1, $(paper_id)]
            - [str2, $(id)]
    - p: schema:SoftwareSourceCode
      o:
      - mapping: tool
        condition:
          function: equal
          parameters:
            - [str1, $(tool_id)]
            - [str2, $(id)]           

  awards_tools:
    sources:
      - [files/awards_tools.csv~csv]
    s: oeg:Award_tool/$(award_id)_$(tool_id)
    po:
    - [a, schema:isRelatedTo]
    - p: schema:award
      o:
      - mapping: award
        condition:
          function: equal
          parameters:
            - [str1, $(award_id)]
            - [str2, $(id)]
    - p: schema:SoftwareSourceCode
      o:
      - mapping: tool
        condition:
          function: equal
          parameters:
            - [str1, $(tool_id)]
            - [str2, $(id)]

  people_tools:
    sources:
      - [files/people_tools.csv~csv]
    s: oeg:Person_tool/$(person_id)_$(tool_id)
    po:
    - [a, schema:isRelatedTo]
    - p: schema:Person
      o:
      - mapping: person
        condition:
          function: equal
          parameters:
            - [str1, $(person_id)]
            - [str2, $(id)]
    - p: schema:SoftwareSourceCode
      o:
      - mapping: tool
        condition:
          function: equal
          parameters:
            - [str1, $(tool_id)]
            - [str2, $(id)]  
  
  people_awards:
    sources:
      - [files/people_awards.csv~csv]
    s: oeg:Person_award/$(person_id)_$(award_id)
    po:
    - [a, schema:isRelatedTo]
    - [schema:position, $(position), xsd:integer]
    - p: schema:Person
      o:
      - mapping: person
        condition:
          function: equal
          parameters:
            - [str1, $(person_id)]
            - [str2, $(id)]
    - p: schema:award
      o:
      - mapping: award
        condition:
          function: equal
          parameters:
            - [str1, $(award_id)]
            - [str2, $(id)]  
